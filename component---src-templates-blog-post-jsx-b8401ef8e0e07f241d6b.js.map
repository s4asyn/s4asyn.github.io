{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./src/templates/blog-post.jsx"],"names":["MDXRenderer","require","module","React","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","Object","values","key","fn","shortcodes","Link","post","data","SeoData","description","frontmatter","desc","title","date","moment","format","body","query"],"mappings":"gFAMA,IAAMA,EAAcC,EAApB,QAEAC,UAAiB,CACfF,YAAaA,I,qrECTf,IAAMG,EAAQF,EAAd,Q,EACkCA,EAAQ,QAAlCG,E,EAAAA,iBAAkBC,E,EAAAA,IAClBC,EAAgBL,EAAQ,QAAxBK,YAERJ,UAAiB,SAAqB,GAKlC,IAJFK,EAIC,EAJDA,MACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,SACGC,E,oIACF,sCACKC,EAAgBP,EAAtB,GACMQ,EAAWN,EAFhB,GAKKO,EAAMV,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMW,EAAS,GAGbX,MAHa,EAIbE,OAJF,GAQMU,EAAOC,YAAb,GACMC,EAASF,EAAA,KAAS,SAAAG,GAAG,OAAIJ,EAAJ,MAG3B,OAFQ,mCAAR,KAEOK,2BAAP,OACC,CAACV,EAlBJ,IAoBA,OAAON,EAAA,mBAA2BK,WAAYG,GAA9C,M,kCClCF,2IAQMS,EAAa,CAAEC,UAEN,sBAAe,IACpBC,EADmB,EAAXC,KACIlB,IACZmB,EAAU,CACZC,YAAaH,EAAKI,YAAYC,KAC9BC,MAAON,EAAKI,YAAYE,MACxBC,KAAMC,IAAOR,EAAKI,YAAYG,KAAM,iBAAiBE,OACjD,kBAGR,OACI,kBAAC,IAAD,CAAQP,QAASA,GACb,kBAAC,IAAD,KACI,kBAAC,cAAD,CAAahB,WAAYY,GACrB,kBAAC,cAAD,KAAcE,EAAKU,UAOhC,IAAMC,EAAK","file":"component---src-templates-blog-post-jsx-b8401ef8e0e07f241d6b.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport moment from 'moment-jalaali';\nimport { MDXProvider } from '@mdx-js/react';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\n\nimport { Layout, MarkdownPost } from '#components';\n\nconst shortcodes = { Link }; // Provide common components here\n\nexport default ({ data }) => {\n    const post = data.mdx;\n    const SeoData = {\n        description: post.frontmatter.desc,\n        title: post.frontmatter.title,\n        date: moment(post.frontmatter.date, 'DD MMMM, YYYY').format(\n            'jYYYY/jMM/jDD',\n        ),\n    };\n    return (\n        <Layout SeoData={SeoData}>\n            <MarkdownPost>\n                <MDXProvider components={shortcodes}>\n                    <MDXRenderer>{post.body}</MDXRenderer>\n                </MDXProvider>\n            </MarkdownPost>\n        </Layout>\n    );\n};\n\nexport const query = graphql`\n    query($slug: String!) {\n        mdx(fields: { slug: { eq: $slug } }) {\n            body\n            frontmatter {\n                title\n                date(formatString: \"DD MMMM, YYYY\")\n                lang\n                desc\n            }\n        }\n    }\n`;\n"],"sourceRoot":""}